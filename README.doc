
THREADS:

These studies were created in base on the tutorials avaiable in:
	https://www.callicoder.com/java-multithreading-thread-and-runnable-tutorial/
	https://www.callicoder.com/java-executor-service-and-thread-pool-tutorial/
	http://www.java2s.com/Code/Java/Threads/CatalogThreads.htm
	https://www.guru99.com/multithreading-java.html
and with the book Operating System Concepts, Ninth Edition, by Avi Silberschatz, Peter Baer Galvin and Greg Gagne.

Study 1: Creating Threads using the Thread class
Study 2: Creating Threads using Runnable
Study 3: Study over sleep()

Study 4: Study over join().
		 There are no java file or java class for this study. It is implemented in its main method.

Study 5: The Executor Framework 
		 The aim of this study is to introduce the Executor Framework
		 Used when it is needed to create a big number of threads runninng tasks currently
		 It makes sense to separate thread creation and management from the rest of the application
		 The Executor helps in:
		 	1- Thread creation
		 	2- Thread management
		 	3- Task submission and execution

		Imports: 

			ExecutorService: Adds functionality to manage the lifecycle of the tasks.
							 It also provides a submit() method whose overloaded 
							 versions can accept a Runnable as well as a Callable object.

	 		Executors: contains the execute() method to launch a task specified by a Runnable object

			ScheduledExecutorService: A sub-interface of ExecutorService. It adds functionality to 
	 							 	  schedule the execution of the tasks.
